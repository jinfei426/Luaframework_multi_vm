//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EventManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EventManager), typeof(System.Object));
		L.RegFunction("Send", Send);
		L.RegFunction("Register", _Register);
		L.RegFunction("UnRegister", UnRegister);
		L.RegFunction("New", _CreateEventManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Inst", get_Inst, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEventManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EventManager obj = new EventManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EventManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Send(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			EventManager obj = (EventManager)ToLua.CheckObject<EventManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.Send(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Register(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EventManager obj = (EventManager)ToLua.CheckObject<EventManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			EventHandler arg1 = (EventHandler)ToLua.CheckDelegate<EventHandler>(L, 3);
			obj.Register(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnRegister(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EventManager obj = (EventManager)ToLua.CheckObject<EventManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			EventHandler arg1 = (EventHandler)ToLua.CheckDelegate<EventHandler>(L, 3);
			obj.UnRegister(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, EventManager.Inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

