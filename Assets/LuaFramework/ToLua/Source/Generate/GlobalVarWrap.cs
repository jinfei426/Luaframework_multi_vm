//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GlobalVarWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GlobalVar), typeof(System.Object));
		L.RegFunction("New", _CreateGlobalVar);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("str1", get_str1, set_str1);
		L.RegVar("str2", get_str2, set_str2);
		L.RegVar("i1", get_i1, set_i1);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGlobalVar(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GlobalVar obj = new GlobalVar();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GlobalVar.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_str1(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GlobalVar.str1);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_str2(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GlobalVar.str2);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_i1(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GlobalVar.i1);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_str1(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			GlobalVar.str1 = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_str2(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			GlobalVar.str2 = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_i1(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GlobalVar.i1 = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

